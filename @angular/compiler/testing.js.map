{"version":3,"file":"testing.js","sources":["../../../../../packages/compiler/testing/index.ts","../../../../../packages/compiler/testing/src/testing.ts","../../../../../packages/compiler/testing/src/pipe_resolver_mock.ts","../../../../../packages/compiler/testing/src/ng_module_resolver_mock.ts","../../../../../packages/compiler/testing/src/directive_resolver_mock.ts","../../../../../packages/compiler/testing/src/schema_registry_mock.ts","../../../../../packages/compiler/testing/src/resource_loader_mock.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the compiler/testing package.\n */\n\nexport * from './src/testing';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport * from './resource_loader_mock';\nexport * from './schema_registry_mock';\nexport * from './directive_resolver_mock';\nexport * from './ng_module_resolver_mock';\nexport * from './pipe_resolver_mock';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, PipeResolver, core} from '@angular/compiler';\n\nexport class MockPipeResolver extends PipeResolver {\n  private _pipes = new Map<core.Type, core.Pipe>();\n\n  constructor(refector: CompileReflector) { super(refector); }\n\n  /**\n   * Overrides the {@link Pipe} for a pipe.\n   */\n  setPipe(type: core.Type, metadata: core.Pipe): void { this._pipes.set(type, metadata); }\n\n  /**\n   * Returns the {@link Pipe} for a pipe:\n   * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n   * default\n   * `PipeResolver`, see `setPipe`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.Pipe {\n    let metadata = this._pipes.get(type);\n    if (!metadata) {\n      metadata = super.resolve(type, throwIfNotFound) !;\n    }\n    return metadata;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, NgModuleResolver, core} from '@angular/compiler';\n\nexport class MockNgModuleResolver extends NgModuleResolver {\n  private _ngModules = new Map<core.Type, core.NgModule>();\n\n  constructor(reflector: CompileReflector) { super(reflector); }\n\n  /**\n   * Overrides the {@link NgModule} for a module.\n   */\n  setNgModule(type: core.Type, metadata: core.NgModule): void {\n    this._ngModules.set(type, metadata);\n  }\n\n  /**\n   * Returns the {@link NgModule} for a module:\n   * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n   * default\n   * `NgModuleResolver`, see `setNgModule`.\n   */\n  resolve(type: core.Type, throwIfNotFound = true): core.NgModule {\n    return this._ngModules.get(type) || super.resolve(type, throwIfNotFound) !;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {CompileReflector, DirectiveResolver, core} from '@angular/compiler';\n\n/**\n * An implementation of {@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nexport class MockDirectiveResolver extends DirectiveResolver {\n  private _directives = new Map<core.Type, core.Directive>();\n\n  constructor(reflector: CompileReflector) { super(reflector); }\n\n  resolve(type: core.Type): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: true): core.Directive;\n  resolve(type: core.Type, throwIfNotFound: boolean): core.Directive|null;\n  resolve(type: core.Type, throwIfNotFound = true): core.Directive|null {\n    return this._directives.get(type) || super.resolve(type, throwIfNotFound);\n  }\n\n  /**\n   * Overrides the {@link core.Directive} for a directive.\n   */\n  setDirective(type: core.Type, metadata: core.Directive): void {\n    this._directives.set(type, metadata);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementSchemaRegistry, core} from '@angular/compiler';\n\nexport class MockSchemaRegistry implements ElementSchemaRegistry {\n  constructor(\n      public existingProperties: {[key: string]: boolean},\n      public attrPropMapping: {[key: string]: string},\n      public existingElements: {[key: string]: boolean}, public invalidProperties: Array<string>,\n      public invalidAttributes: Array<string>) {}\n\n  hasProperty(tagName: string, property: string, schemas: core.SchemaMetadata[]): boolean {\n    const value = this.existingProperties[property];\n    return value === void 0 ? true : value;\n  }\n\n  hasElement(tagName: string, schemaMetas: core.SchemaMetadata[]): boolean {\n    const value = this.existingElements[tagName.toLowerCase()];\n    return value === void 0 ? true : value;\n  }\n\n  allKnownElementNames(): string[] { return Object.keys(this.existingElements); }\n\n  securityContext(selector: string, property: string, isAttribute: boolean): core.SecurityContext {\n    return core.SecurityContext.NONE;\n  }\n\n  getMappedPropName(attrName: string): string { return this.attrPropMapping[attrName] || attrName; }\n\n  getDefaultComponentElementName(): string { return 'ng-component'; }\n\n  validateProperty(name: string): {error: boolean, msg?: string} {\n    if (this.invalidProperties.indexOf(name) > -1) {\n      return {error: true, msg: `Binding to property '${name}' is disallowed for security reasons`};\n    } else {\n      return {error: false};\n    }\n  }\n\n  validateAttribute(name: string): {error: boolean, msg?: string} {\n    if (this.invalidAttributes.indexOf(name) > -1) {\n      return {\n        error: true,\n        msg: `Binding to attribute '${name}' is disallowed for security reasons`\n      };\n    } else {\n      return {error: false};\n    }\n  }\n\n  normalizeAnimationStyleProperty(propName: string): string { return propName; }\n  normalizeAnimationStyleValue(camelCaseProp: string, userProvidedProp: string, val: string|number):\n      {error: string, value: string} {\n    return {error: null !, value: val.toString()};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\n\n/**\n * A mock implementation of {@link ResourceLoader} that allows outgoing requests to be mocked\n * and responded to within a single test, without going to the network.\n */\nexport class MockResourceLoader extends ResourceLoader {\n  private _expectations: _Expectation[] = [];\n  private _definitions = new Map<string, string>();\n  private _requests: _PendingRequest[] = [];\n\n  get(url: string): Promise<string> {\n    const request = new _PendingRequest(url);\n    this._requests.push(request);\n    return request.getPromise();\n  }\n\n  hasPendingRequests() { return !!this._requests.length; }\n\n  /**\n   * Add an expectation for the given URL. Incoming requests will be checked against\n   * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n   * can be used to check if any expectations have not yet been met.\n   *\n   * The response given will be returned if the expectation matches.\n   */\n  expect(url: string, response: string) {\n    const expectation = new _Expectation(url, response);\n    this._expectations.push(expectation);\n  }\n\n  /**\n   * Add a definition for the given URL to return the given response. Unlike expectations,\n   * definitions have no order and will satisfy any matching request at any time. Also\n   * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n   * to return an error.\n   */\n  when(url: string, response: string) { this._definitions.set(url, response); }\n\n  /**\n   * Process pending requests and verify there are no outstanding expectations. Also fails\n   * if no requests are pending.\n   */\n  flush() {\n    if (this._requests.length === 0) {\n      throw new Error('No pending requests to flush');\n    }\n\n    do {\n      this._processRequest(this._requests.shift() !);\n    } while (this._requests.length > 0);\n\n    this.verifyNoOutstandingExpectations();\n  }\n\n  /**\n   * Throw an exception if any expectations have not been satisfied.\n   */\n  verifyNoOutstandingExpectations() {\n    if (this._expectations.length === 0) return;\n\n    const urls: string[] = [];\n    for (let i = 0; i < this._expectations.length; i++) {\n      const expectation = this._expectations[i];\n      urls.push(expectation.url);\n    }\n\n    throw new Error(`Unsatisfied requests: ${urls.join(', ')}`);\n  }\n\n  private _processRequest(request: _PendingRequest) {\n    const url = request.url;\n\n    if (this._expectations.length > 0) {\n      const expectation = this._expectations[0];\n      if (expectation.url == url) {\n        remove(this._expectations, expectation);\n        request.complete(expectation.response);\n        return;\n      }\n    }\n\n    if (this._definitions.has(url)) {\n      const response = this._definitions.get(url);\n      request.complete(response == null ? null : response);\n      return;\n    }\n\n    throw new Error(`Unexpected request ${url}`);\n  }\n}\n\nclass _PendingRequest {\n  resolve: (result: string) => void;\n  reject: (error: any) => void;\n  promise: Promise<string>;\n\n  constructor(public url: string) {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  complete(response: string|null) {\n    if (response == null) {\n      this.reject(`Failed to load ${this.url}`);\n    } else {\n      this.resolve(response);\n    }\n  }\n\n  getPromise(): Promise<string> { return this.promise; }\n}\n\nclass _Expectation {\n  url: string;\n  response: string;\n  constructor(url: string, response: string) {\n    this.url = url;\n    this.response = response;\n  }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n"],"names":[],"mappings":"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"}