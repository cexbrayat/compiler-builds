{"version":3,"sources":["/Users/cedric/Code/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","__symbolic","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","_f","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","ngModuleSummary","summary_1","importAs","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","declarationSymbol","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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","file":"/Users/cedric/Code/angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-rc.8-bb807501c\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-rc.8-bb807501c\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-rc.8-bb807501c');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                    if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                        importAs = symbol.name + \"_\" + index;\n                        exportAs.push({ symbol: symbol, exportAs: importAs });\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { moduleName: data.moduleName, summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) {\n                _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n            });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}